#include <iostream>
#include<math.h>

using namespace std;


class Point
{
	float x,y;
public:
	Point(float x, float y) {
		setX(x);
		setY(y);
	}
	float getX() const { return x; }
	float getY() const { return y; }

	void setX(float _x) { x = _x; }
	void setY(float _y) { y = _y; }
};


class Line{
    float a,b,c;
public:
    Line(float a, float b, float c){
    setA(a);    setB(b);    setC(c);
    }

    Point operator*(const Line &l) const; // znajduje punkt przeciêcia dwóch prostych
    bool operator||(const Line &l) const; // testuje równoleg³oœæ dwóch prostych
    bool operator==(const Line &l) const; // sprawdza równoœæ dwóch prostych

    void setA(float _a) {a=_a;}
    void setB(float _b) {b=_b;}
    void setC(float _c) {c=_c;}
};


Point Line::operator*(const Line &l) const{
	float W = a * l.b - b * l.a;
	float Wx = -c*l.b + l.c*b;
	float Wy = -a*l.c + c*l.a;

	return Point(Wx/W, Wy/W);
}

bool Line::operator||(const Line &l) const{
     if(a==l.a) return 1;
     return 0;
}

bool Line::operator==(const Line &l) const{
    if(a==l.a && b==l.b && c==l.c) return 1;
    else return 0;
}

ostream& operator<<(ostream &os, const Point &w){
    return os<<w.getX()<<" , "<<w.getY()<<endl;
}

int main()
{
    float a,b,c;

    cout << "Podaj wspó³czynniki pierwszego równania (ax+by=c): ";
    cin >> a >> b >> c;
    Line k(a,b,-c);


    cout << "Podaj wspó³czynniki drugiego równania (ax+by=c): ";
    cin >> a >> b >> c;

    Line l(a,b,-c);

    Point p = l*k;

   if (k == l) {
      cout << "Istnieje nieskoñczenie wiele rozwi¹zañ." << endl;
    } else if (k || l) {
      cout << "Uk³ad jest sprzeczny." << endl;
    } else {
      cout << "Rozwi¹zanie uk³adu to " << p;
    }

    return 0;
}
